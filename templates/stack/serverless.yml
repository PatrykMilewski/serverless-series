service: Example

plugins:
  - serverless-pseudo-parameters
  - serverless-webpack
  - serverless-plugin-resource-tagging
  - serverless-iam-roles-per-function

package:
  individually: true

custom:
  baseName: "sls-series-${self:service}-${opt:stage}"

  serverless-iam-roles-per-function:
    defaultInherit: true

provider:
  name: aws
  stage: ${opt:stage}
  stackName: ${self:custom.baseName}
  runtime: nodejs12.x
  memorySize: 256
  timeout: 20
  logRetentionInDays: 30
  tracing:
    lambda: true
  deploymentBucket:
    blockPublicAccess: true
  stackTags:
    STACK: "${self:custom.baseName}"
    SERVICE: "${self:service}"
    PROJECT: "${self:custom.serviceIdentifier}"
    STAGE: "${opt:stage}"
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
    DEBUG: "false"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - xray:PutTelemetryRecords
        - xray:PutTraceSegments
      Resource: "*"

functions:
  example:
    handler: src/example.handler
    name: ${self:custom.baseName}
    description: Short function description
#    iamRoleStatements:
#      - Effect: Allow
#        Action:
#          - s3:PutObject
#        Resource: !Join ["", [!GetAtt MyNewBucket.Arn, "/*"]]
#    events:
#      - http:
#          path: users/create
#          method: get
#      - websocket: $connect
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp
#      - alb:
#          listenerArn: arn:aws:elasticloadbalancing:us-east-1:XXXXXX:listener/app/my-load-balancer/50dc6c495c0c9188/
#          priority: 1
#          conditions:
#            host: example.com
#            path: /hello
#
#    Define function environment variables here
#    environment:
#      variable2: value2
#
resources:
  Description: Short CloudFormation stack description
  Resources:
#    MyNewBucket:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: ${self:custom.baseName}
