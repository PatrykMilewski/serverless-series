service: roles-per-function

plugins:
  - serverless-pseudo-parameters
  - serverless-webpack
  - serverless-iam-roles-per-function
  - serverless-s3-deploy

package:
  individually: true

custom:
  baseName: "sls-series-${self:service}-${opt:stage}"

  emailForAlarms: "patryk.milewski@merapar.com"

  bucketName: ${self:custom.baseName}
  assets:
    auto: true
    targets:
      - bucket: ${self:custom.bucketName}
        files:
          - source: bucket/
            globs:
              - "*.txt"

  serverless-iam-roles-per-function:
    defaultInherit: true

provider:
  name: aws
  stage: ${opt:stage}
  stackName: ${self:custom.baseName}
  runtime: nodejs12.x
  memorySize: 256
  timeout: 20
  logRetentionInDays: 30
  tracing:
    lambda: true
  deploymentBucket:
    blockPublicAccess: true
  stackTags:
    STACK: "${self:provider.stackName}"
    SERVICE: "${self:service}"
    STAGE: "${opt:stage}"
  environment:
    DEBUG: "false"
    BUCKET_NAME: ${self:custom.bucketName}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - xray:PutTelemetryRecords
        - xray:PutTraceSegments
      Resource: "*"

functions:
  reader:
    handler: src/reader.handler
    name: ${self:custom.baseName}-reader
    description: Reads example.txt from S3 bucket
    iamRoleStatements:
      - Effect: Allow
        Action:
          - s3:GetObject
        Resource: !Join ["", [!GetAtt ExampleBucket.Arn, "/*"]]
  writer:
    handler: src/writer.handler
    name: ${self:custom.baseName}-writer
    description: Writes random text file to S3 bucket
    iamRoleStatements:
      - Effect: Allow
        Action:
          - s3:PutObject
        Resource: !Join ["", [!GetAtt ExampleBucket.Arn, "/*"]]

resources:
  Resources:

    ExampleBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}